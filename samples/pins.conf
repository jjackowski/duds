pins {
	ports {
		default {
			; GpioDevPort requires the local pin IDs to match the IDs presented
			; by the Linux GPIO device. This means that with a port ID offset
			; of zero, global and local IDs must match. This is accomplished
			; by repeating each ID so that the configuration specifies the same
			; number for the global and local ID.
			; Need to consider a better approach to this since it is likely to
			; be common and seems pretty silly to keep manually repeating
			; numbers.
			5 5 {
				lcdData4
			}
			6 6 {
				lcdData5
			}
			16 16 {
				lcdData6
			}
			20 20 {
				lcdData7
			}
			26 26 {
				lcdText ; often labeled "RS", true when text, not a command, is sent
			}
			0 0 {
				lcdGSelectPin
			}
			1 1 {
				lcdTSelectPin
			}
			; Possible change: 1st value is port specific (local) ID, followed
			; by an optional modified ID that the port implementation can
			; figure out. Also, allow the first value to be a string that the
			; port implementation figures out. Could be tricky to do, so delay.
		}
	}
	selects {
		lcdSelMgr PinSet {
			lcdGraphicSelect lcdGSelectPin
			lcdTextSelect {
				pin lcdTSelectPin
				select low
			}
		}
	}
	sets {
		lcdText {
			pins {
				lcdData4
				lcdData5
				lcdData6
				lcdData7
				lcdText
			}
			select lcdTextSelect
		}
		lcdGraphic {
			pins {
				lcdData4
				lcdData5
				lcdData6
				lcdData7
				lcdText
			}
			select lcdGraphicSelect
		}
	}
}
